<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
android:layout_width="fill_parent"
android:layout_height="fill_parent"
android:orientation="vertical" >
<TextView
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="top|center"
    android:text="ABC's of Android Game Dev" />
<Button
    android:id="@+id/the_button"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="center"
    android:gravity="center"
    android:enabled="false"
    android:text="Reset" />
<TextView
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="center"
    android:text="Sprite Speed (?,?)"
    android:id="@+id/the_label" />
<TextView
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:layout_gravity="center"
    android:text="Last Collision XY (?,?)"
    android:id="@+id/the_other_label" />
<com.authorwjf.drawing.GameBoard
    android:layout_width="fill_parent"
    android:layout_height="fill_parent"
    android:layout_margin="20dip"
    android:id="@+id/the_canvas"/>
</LinearLayout>
    package com.jamiegelman1.gamedevtut;

    import com.jamiegelman1.drawing.GameBoard;
    import com.jamiegelman1.gamedevtut.R;
    import android.os.Bundle;
    import android.os.Handler;
    import android.app.Activity;
    import android.view.View;
    import android.view.View.OnClickListener;
    import android.widget.Button;

    public class Main extends Activity implements OnClickListener{

    private Handler frame = new Handler();
    //Divide the frame by 1000 to calculate how many times per second the screen will update.
    private static final int FRAME_RATE = 20; //50 frames per second
    @Override
    public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    Handler h = new Handler();
    ((Button)findViewById(R.id.the_button)).setOnClickListener(this);
    //We can't initialize the graphics immediately because the layout manager
    //needs to run first, thus we call back in a sec.
    h.postDelayed(new Runnable() {
    @Override
    public void run() {
    initGfx();
    }
    }, 1000);
    }

    synchronized public void initGfx() {
    ((GameBoard)findViewById(R.id.the_canvas)).resetStarField();
    ((Button)findViewById(R.id.the_button)).setEnabled(true);
    //It's a good idea to remove any existing callbacks to keep
    //them from inadvertently stacking up.
    frame.removeCallbacks(frameUpdate);
    frame.postDelayed(frameUpdate, FRAME_RATE);
    }
    @Override
    synchronized public void onClick(View v) {
    initGfx();
    }
    private Runnable frameUpdate = new Runnable() {
    @Override
    synchronized public void run() {
    frame.removeCallbacks(frameUpdate);
    //make any updates to on screen objects here
    //then invoke the on draw by invalidating the canvas
    ((GameBoard)findViewById(R.id.the_canvas)).invalidate();
    frame.postDelayed(frameUpdate, FRAME_RATE);
    }
    };
    }
